version: '3.8'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.19
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - gateway-net
      - internal-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.19
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - gateway-net
      - internal-net

  fluentd:
    build: ./fluentd
    container_name: fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/data:/fluentd/log
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    depends_on:
      - elasticsearch
    networks:
      - gateway-net
      - internal-net

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "443:443"
    environment:
      GATEWAY_HOST: ${GATEWAY_HOST:-gateway-svc}
      GATEWAY_PORT: ${GATEWAY_PORT:-8080}
      FRONTEND_HOST: ${FRONTEND_HOST:-web}
      FRONTEND_PORT: ${FRONTEND_PORT:-80}
    networks:
      gateway-net:
        ipv4_address: 172.30.0.10
      internal-net:
    depends_on:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: nginx

  web:
    container_name: web
    build:
      context: ./web
      dockerfile: Dockerfile
    hostname: web
    networks:
      - gateway-net
    extra_hosts:
      - "api.shopmicro.local:172.30.0.10"
    ports:
      - "8000:80"
    environment:
      SERVICE_HOST: "web"
    env_file: .env
    volumes:
      - ./web/image/default.conf:/etc/nginx/sites-enabled/default.conf
    working_dir: /var/www/html
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: web
    depends_on:
      - fluentd

  gateway-svc:
    container_name: gateway-svc
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    hostname: gateway-svc
    networks:
      - internal-net
    expose:
      - "8080"
    env_file: .env
    volumes:
      - ./services/gateway/image/default.conf:/etc/nginx/sites-enabled/default.conf
    working_dir: /var/www/html
    depends_on:
      - consul
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: gateway

  auth-svc:
    container_name: auth-svc
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    hostname: auth-svc
    networks:
      - internal-net
    expose:
      - "8080"
    env_file:
      - .env
      - ./db/auth/.env
    depends_on:
      - auth-svc-db
      - consul
      - fluentd
    volumes:
      - ./services/auth/image/default.conf:/etc/nginx/sites-enabled/default.conf
    working_dir: /var/www/html
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: auth

  auth-svc-db:
    container_name: auth-svc-db
    hostname: auth-svc-db
    networks:
      - internal-net
    image: mariadb:10.8.3
    # Uncomment below when on Mac M1
    #    platform: linux/arm64/v8
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - ./db/auth/mysql-data:/var/lib/mysql

  product-svc:
    container_name: product-svc
    build:
      context: ./services/product
      dockerfile: Dockerfile
    hostname: product-svc
    networks:
      - internal-net
    expose:
      - "8080"
    env_file:
      - .env
      - ./db/product/.env
    depends_on:
      - product-svc-db
      - consul
      - fluentd
    volumes:
      - ./services/product/image/default.conf:/etc/nginx/sites-enabled/default.conf
    working_dir: /var/www/html
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: product

  product-svc-db:
    container_name: product-svc-db
    hostname: product-svc-db
    networks:
      - internal-net
    image: mariadb:10.8.3
    # Uncomment below when on Mac M1
    #    platform: linux/arm64/v8
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3308:3306"
    volumes:
      - ./db/product/mysql-data:/var/lib/mysql

  consul:
    image: consul:1.15.4
    container_name: consul
    hostname: consul-svc
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -dev -client=0.0.0.0
    networks:
      - internal-net
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
        tag: consul
    depends_on:
      - fluentd

networks:
  gateway-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

  internal-net:
    driver: bridge


